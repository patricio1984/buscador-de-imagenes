{"version":3,"sources":["components/Error.js","components/Formulario.js","components/Imagen.js","components/ListadoImagenes.js","App.js","reportWebVitals.js","index.js"],"names":["Error","mensaje","className","Formulario","guardarBusqueda","useState","termino","guardarTermino","error","guardarError","onSubmit","e","preventDefault","trim","type","placeholder","onChange","target","value","Imagen","imagen","largeImageURL","likes","previewURL","tags","views","src","alt","href","rel","ListadoImagenes","imagenes","map","id","App","busqueda","guardarImagenes","paginaactual","guardarPaginaActual","totalpaginas","guardarTotalPaginas","useEffect","a","imagenesPorPagina","url","fetch","respuesta","json","resultado","hits","calcularTotalPaginas","Math","ceil","totalHits","document","querySelector","scrollIntoView","behavior","consultarApi","onClick","nuevaPaginaActual","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.a5b24812.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Error = ({mensaje}) => {\r\n    return ( \r\n        <p className=\"my-3 p-4 text-center alert alert-primary\">{mensaje}</p>\r\n\r\n     );\r\n}\r\n\r\nError.propTypes = {\r\n    noticia: PropTypes.string.isRequired\r\n}\r\n \r\nexport default Error;","import React, { useState } from 'react';\r\nimport Error from \"./Error\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Formulario = ({guardarBusqueda}) => {\r\n\r\n    const [ termino, guardarTermino ] = useState(\"\");\r\n    const [ error, guardarError ] = useState(false)\r\n\r\n    const buscarImagenes = e => {\r\n        e.preventDefault();\r\n\r\n        //Validar\r\n        if(termino.trim() === \"\") {\r\n            guardarError(true);\r\n            return;\r\n        }\r\n        guardarError(false);\r\n\r\n        //Enviar el término de búsqueda hacia el componente principal\r\n        guardarBusqueda(termino);\r\n\r\n    }\r\n    return ( \r\n        <form\r\n            onSubmit={buscarImagenes}\r\n        >\r\n            <div className=\"row\">\r\n                <div className=\"form-group col-md-8\">\r\n                    <input\r\n                        type=\"text\"\r\n                        className=\"form-control form-control-lg\"\r\n                        placeholder=\"Busca una imagen, ejemplo: futbol o café\"\r\n                        onChange={e => guardarTermino(e.target.value)}\r\n                    />\r\n                </div>\r\n                <div className=\"form-group col-md-4\">\r\n                    <input\r\n                        type=\"submit\"\r\n                        className=\"btn btn-lg btn-danger btn-block\"\r\n                        value=\"Buscar\"\r\n                    />\r\n                </div>\r\n            </div>\r\n            { error ? <Error mensaje=\"Agrega un término de búsqueda\" /> : null }\r\n        </form>\r\n\r\n     );\r\n}\r\n\r\nFormulario.propTypes = {\r\n    guardarBusqueda: PropTypes.func.isRequired\r\n}\r\n\r\nexport default Formulario;","import React from 'react';\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Imagen = ({imagen}) => {\r\n\r\n    //extraer las variables\r\n    const { largeImageURL, likes, previewURL, tags, views } = imagen;\r\n\r\n    return ( \r\n        <div className=\"col-12 col-sm-6 col-md-4 col-lg-3 mb-4\">\r\n            <div className=\"card\">\r\n                <img src={previewURL} alt={tags} className=\"card-img-top\" />\r\n\r\n                <div className=\"card-body\">\r\n                    <p className=\"card-text\">{likes} Me gusta</p> \r\n                    <p className=\"card-text\">{views} Vistas</p> \r\n                </div>\r\n\r\n                <div className=\"card-footer\">\r\n                    <a \r\n                        href={largeImageURL}\r\n                        target=\"_blank\"\r\n                        rel=\"noopener noreferrer\"\r\n                        className=\"btn btn-primary btn-block\"\r\n                    >Ver Imagen</a>\r\n                </div>\r\n            </div>\r\n        </div>\r\n     );\r\n}\r\n\r\nImagen.propTypes = {\r\n    imagen: PropTypes.object.isRequired\r\n}\r\n \r\nexport default Imagen;","import React from 'react';\r\nimport Imagen from \"./Imagen\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst ListadoImagenes = ({imagenes}) => {\r\n    return ( \r\n        <div className=\"col-12 p-5 row\">\r\n            {imagenes.map(imagen => (\r\n                <Imagen\r\n                    key={imagen.id}\r\n                    imagen={imagen}\r\n                />\r\n            ))}\r\n        </div>\r\n     );\r\n}\r\n\r\nListadoImagenes.propTypes = {\r\n    imagenes: PropTypes.array.isRequired\r\n}\r\n\r\nexport default ListadoImagenes;","import React, { useState, useEffect } from \"react\";\nimport Formulario from \"./components/Formulario\";\nimport ListadoImagenes from \"./components/ListadoImagenes\";\n\nfunction App() {\n\n  //state de la app\n  const [ busqueda, guardarBusqueda ] = useState(\"\");\n  const [ imagenes, guardarImagenes ] = useState([]);\n  const [ paginaactual, guardarPaginaActual ] = useState(1);\n  const [ totalpaginas, guardarTotalPaginas ] = useState(1);\n\n  useEffect(() => {\n     \n    const consultarApi = async () => {\n      if(busqueda === \"\") return;\n\n      const imagenesPorPagina = 30;\n      const key = \"19890270-df29228a5b938c84aa1e44026\";\n      const url = `https://pixabay.com/api/?key=${key}&q=${busqueda}&per_page=${imagenesPorPagina}&page=${paginaactual}`;\n\n      const respuesta = await fetch(url);\n      const resultado = await respuesta.json();\n\n      guardarImagenes(resultado.hits);\n\n      //calcular el total de páginas\n      const calcularTotalPaginas = Math.ceil(resultado.totalHits / imagenesPorPagina );\n      guardarTotalPaginas(calcularTotalPaginas);\n\n      // Mover la pantalla hacia arriba\n      const jumbotron = document.querySelector(\".jumbotron\");\n      jumbotron.scrollIntoView({ behavior: \"smooth\" });\n    }\n    consultarApi();\n  }, [busqueda, paginaactual]);\n\n  //definir la página anterior\n  const paginaAnterior = () => {\n    const nuevaPaginaActual = paginaactual - 1;\n\n    if(nuevaPaginaActual === 0) return;\n\n    guardarPaginaActual(nuevaPaginaActual);\n  }\n\n  //definir la página siguiente\n  const paginaSiguiente = () => {\n    const nuevaPaginaActual = paginaactual + 1;\n\n    if (nuevaPaginaActual > totalpaginas) return;\n\n    guardarPaginaActual(nuevaPaginaActual);\n  }\n\n\n  return (\n    <div className=\"container\">\n        <div className=\"jumbotron\">\n            <p className=\"lead text-center\">Buscador de Imágenes</p>\n            <Formulario \n              guardarBusqueda={guardarBusqueda}\n            />\n        </div>\n\n        <div className=\"row justify-content-center\">\n            <ListadoImagenes \n              imagenes={imagenes}\n            />\n\n            { (paginaactual === 1) \n              ? null \n              : (\n                <button\n                  type=\"button\"\n                  className=\"btn btn-info mr-1\"\n                  onClick={paginaAnterior}\n                >&laquo; Anterior \n                </button>)}\n\n            { (paginaactual === totalpaginas)  ? null : (\n                <button\n                  type=\"button\"\n                  className=\"btn btn-info mr-1\"\n                  onClick={paginaSiguiente}\n                  >Siguiente &raquo;\n                </button>\n            )}\n       \n        </div>\n    </div>\n    \n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}